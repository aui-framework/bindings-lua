// AUI Framework - Declarative UI toolkit for modern C++20
// Copyright (C) 2020-2025 Alex2772 and Contributors
//
// SPDX-License-Identifier: MPL-2.0
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.
//

#include "AUI/Util/ALayoutInflater.h"
#include "StyleHelper.h"
#include <uiengine/UIEngine.h>



void ViewWrapper::setStyle(clg::table table) {
    StyleHelper sh;
    if (!sh.processDeclaration(table)) {
        PropertyList ruleWithoutSelector;
        StyleHelper::processDeclarations(ruleWithoutSelector, table.toArray());
        mView->setCustomStyle(std::move(ruleWithoutSelector));
        return;
    }

    auto stylesheet = _new<AStylesheet>(AStylesheet(std::initializer_list<Rule>{}));
    stylesheet->setRules(std::move(static_cast<AVector<Rule>&>(sh.rules())));
    mView->setExtraStylesheet(std::move(stylesheet));
}

void ViewWrapper::addView(const _<AView>& view) {
    if (auto c = std::dynamic_pointer_cast<AViewContainer>(mView)){
        auto v = view;
        c->addView(v);
        v->invalidateAssHelper();
        if(c->getParent()) c->applyGeometryToChildrenIfNecessary();
    }
}

void ViewWrapper::addViewCustomLayout(const _<AView>& view) {
    if (auto c = std::dynamic_pointer_cast<AViewContainer>(mView)){
        auto v = view;
        c->addViewCustomLayout(v);
        v->invalidateAssHelper();
        if(c->getParent()) c->applyGeometryToChildrenIfNecessary();
    }
}
